<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.36">
  <actions/>
  <description>This pipeline &#xd;
Deploys Multiple Process&#xd;
Runs Unit Test&#xd;
Validates Unit Test &#xd;
Promotes Process into Next Environment</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>componentIds</name>
          <description>List of component Ids to be packaged and deployed if component Ids are null processNames are used instead.</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>processNames</name>
          <description>Comma separated values of process</description>
          <defaultValue></defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>packageVersion</name>
          <description>Package Version</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>notes</name>
          <description>Deployment Notes</description>
          <defaultValue>The process is ...</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TestProcessId</name>
          <description>Id of the TestProcess to be deployed, if id is null TestProcessName is used to create and deploy the package. </description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TestProcessName</name>
          <description>Name of the test process to deploy and execute</description>
          <defaultValue></defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>InitialEnvironment</name>
          <description>Development Environment to deploy and perform tests</description>
          <defaultValue></defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>atomName</name>
          <description>Name of the atom where the unit tests are run</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PromotionEnvironment</name>
          <description>Environment to promote after all tests pass (Stage, Production)</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>listenerStatus</name>
          <description>Listener status	after promotion
</description>
          <defaultValue>RUNNING</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LocalEnvironment</name>
          <description>Name of the local environment to deploy code for GIT</description>
          <defaultValue>#jenkins</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LocalAtomName</name>
          <description>Name of the local atom to extract files for</description>
          <defaultValue>jenkins01</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TAG_NAME</name>
          <description>TAG_NAME to created TAG. If TAG is empty GIT promotion is ignored.</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>node {
    stage(&apos;Deploy to Dev&apos;) {
       build job: &apos;Deploy Packages&apos;, parameters: [[$class: &apos;StringParameterValue&apos;, name: &apos;componentIds&apos;, value: componentIds], [$class: &apos;StringParameterValue&apos;, name: &apos;processNames&apos;, value: processNames], [$class: &apos;StringParameterValue&apos;, name: &apos;env&apos;, value: InitialEnvironment], [$class: &apos;StringParameterValue&apos;, name: &apos;notes&apos;, value: notes], [$class: &apos;StringParameterValue&apos;, name: &apos;packageVersion&apos;, value: packageVersion], [$class: &apos;StringParameterValue&apos;, name: &apos;listenerStatus&apos;, value: &apos;RUNNING&apos;]]
    }    
    stage(&apos;Deploy Test Process&apos;) {
        build job: &apos;Deploy Packages&apos;, parameters: [[$class: &apos;StringParameterValue&apos;, name: &apos;componentIds&apos;, value: TestProcessId], [$class: &apos;StringParameterValue&apos;, name: &apos;processNames&apos;, value: TestProcessName], [$class: &apos;StringParameterValue&apos;, name: &apos;env&apos;, value: InitialEnvironment], [$class: &apos;StringParameterValue&apos;, name: &apos;notes&apos;, value: notes], [$class: &apos;StringParameterValue&apos;, name: &apos;packageVersion&apos;, value: packageVersion]]            
    }
    stage(&apos;Execute Test Process&apos;) {
        build job: &apos;Execute Process&apos;, parameters: [[$class: &apos;StringParameterValue&apos;, name: &apos;processName&apos;, value: TestProcessName], [$class: &apos;StringParameterValue&apos;, name: &apos;componentId&apos;, value: TestProcessId], [$class: &apos;StringParameterValue&apos;, name: &apos;atomName&apos;, value: atomName], [$class: &apos;StringParameterValue&apos;, name: &apos;atomType&apos;, value: &apos;*&apos;]]                
    }
    stage(&apos;Validate Test Process&apos;) {
        build job: &apos;Query Execution Record&apos;, parameters: [[$class: &apos;StringParameterValue&apos;, name: &apos;processName&apos;, value: TestProcessName], [$class: &apos;StringParameterValue&apos;, name: &apos;componentId&apos;, value: TestProcessId], [$class: &apos;StringParameterValue&apos;, name: &apos;env&apos;, value: InitialEnvironment], [$class: &apos;StringParameterValue&apos;, name: &apos;atomName&apos;, value: atomName], [$class: &apos;StringParameterValue&apos;, name: &apos;checkStatus&apos;, value: &apos;true&apos;]]                
    } 
    script{
        if ( !TAG_NAME.isEmpty()) {
            String deploy=&quot;true&quot;
                if (InitialEnvironment == LocalEnvironment) {
                    deploy=&quot;false&quot;
            }
            stage (&apos;Publish to GIT &apos;) {
                 build job: &apos;Publish Packages to GIT&apos;, parameters: [[$class: &apos;StringParameterValue&apos;, name: &apos;componentIds&apos;, value: componentIds], [$class: &apos;StringParameterValue&apos;, name: &apos;processNames&apos;, value: processNames], [$class: &apos;StringParameterValue&apos;, name: &apos;env&apos;, value: LocalEnvironment], [$class: &apos;StringParameterValue&apos;, name: &apos;atomName&apos;, value: LocalAtomName], [$class: &apos;StringParameterValue&apos;, name: &apos;notes&apos;, value: notes], [$class: &apos;StringParameterValue&apos;, name: &apos;packageVersion&apos;, value: packageVersion], [$class: &apos;StringParameterValue&apos;, name: &apos;listenerStatus&apos;, value: &apos;RUNNING&apos;], [$class: &apos;StringParameterValue&apos;, name: &apos;TAG_NAME&apos;, value: TAG_NAME], [$class: &apos;StringParameterValue&apos;, name: &apos;deploy&apos;, value: deploy]]
            }
        }
    }
    stage(&apos;Code Promotion&apos;) {
       build job: &apos;Deploy Packages&apos;, parameters: [[$class: &apos;StringParameterValue&apos;, name: &apos;componentIds&apos;, value: componentIds], [$class: &apos;StringParameterValue&apos;, name: &apos;processNames&apos;, value: processNames], [$class: &apos;StringParameterValue&apos;, name: &apos;env&apos;, value: PromotionEnvironment], [$class: &apos;StringParameterValue&apos;, name: &apos;notes&apos;, value: notes], [$class: &apos;StringParameterValue&apos;, name: &apos;packageVersion&apos;, value: packageVersion], [$class: &apos;StringParameterValue&apos;, name: &apos;listenerStatus&apos;, value: listenerStatus]]
    }
    
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>